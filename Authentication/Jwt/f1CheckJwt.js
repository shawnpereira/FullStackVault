const express = require("express");
const jwt = require("jsonwebtoken");
const jwtPassword = "123456"; // The secret key that only the server has thus even if someone tries to recreate the exact jwt, till they dont have this secret key which is generated by the server, they wont be able to access your account

const app = express();
app.use(express.json());
const ALL_USERS = [
  {
    username: "manoj@gmail.com",
    password: "123",
    name: "manoj singh",
  },
  {
    username: "raman@gmail.com",
    password: "123321",
    name: "Raman singh",
  },
  {
    username: "priya@gmail.com",
    password: "123321",
    name: "Priya kumari",
  },
];

function userExists(username, password) {
  let eligible = false;
  for (i = 0; i < ALL_USERS.length; i++) {
    if (
      ALL_USERS[i].username == username &&
      ALL_USERS[i].password == password
    ) {
      eligible = true;
    }
  }
  return eligible;
}

app.post("/signin", function (req, res) {
  const username = req.body.username;
  const password = req.body.password;

  if (!userExists(username, password)) {
    return res.status(403).json({
      msg: "User doesnt exist in our in memory db",
    });
  }

  var token = jwt.sign({ username: username }, jwtPassword); // sign function means generating jwt token
  return res.json({
    token, // generates jwt token using server inbuilt password
  });
});

app.get("/users", function (req, res) {
  const token = req.headers.authorization; //takes the jwt token
  try {
    const decoded = jwt.verify(token, jwtPassword); // verives the above generated token with the password of server
    const username = decoded.username;
    return res.json({
      users: ALL_USERS.filter(function (value) {
        if (value.username == username) {
          return false;
        } else {
          return true;
        }
      }),
    });
  } catch (err) {
    return res.status(403).json({
      msg: "Invalid token",
    });
  }
});

app.listen(3000);
